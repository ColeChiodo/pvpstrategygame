<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <meta property="og:title" content="Play Now | Fortezza Tactics Online" />
    <meta property="og:description" content="Play Fortezza Tactics Online Now." />
    <meta property="og:image" content="https://fortezzatactics.online/assets/global/favicon.png" />
    <meta property="og:url" content="https://fortezzatactics.online/play" />
    <meta property="og:type" content="website" />

    <title>Play | Fortezza Tactics Online</title>
    <link rel="icon" type="image/png" href="/assets/global/favicon.ico">
    <script src="/js/tailwind.js"></script>
</head>
<body class="bg-primary text-md">
    <canvas id="gameCanvas" class="fixed top-0 left-0"></canvas>

    <div id="playerInfo" class="fixed top-2 sm:top-0 left-0 w-full h-[36px] md:h-[100px] bg-transparent text-white flex justify-between items-center px-4 pointer-events-none mt-3">
        <div id="player2" class="flex items-center p-3 min-w-[150px] md:min-w-[300px] max-w-full overflow-hidden border-4 rounded-lg">
            <img id="player2ProfilePic" src="/assets/profileimages/default.png" 
                 alt="Player 2 Profile Picture" 
                 class="w-[32px] h-[32px] md:w-[64px] md:h-[64px] mr-3" 
                 style="image-rendering: pixelated;">
            <div class="text-left text-primary flex flex-col">
                <div id="player2Name" class="font-bold text-sm md:text-lg">Player 1</div>
                <div id="player2Time" class="text-xs md:text-md">00:00</div>
            </div>
        </div>

        <div id="player1" class="flex items-center p-3 min-w-[150px] md:min-w-[300px] max-w-full overflow-hidden justify-end text-right border-4 rounded-lg">
            <div class="text-right mr-3 text-primary flex flex-col">
                <div id="player1Name" class="font-bold text-sm md:text-lg">Player 2</div>
                <div id="player1Time" class="text-xs md:text-md">00:00</div>
            </div>
            <img id="player1ProfilePic" src="/assets/profileimages/default.png" 
                 alt="Player 1 Profile Picture" 
                 class="w-[32px] h-[32px] md:w-[64px] md:h-[64px]" 
                 style="image-rendering: pixelated;">
        </div>
    </div>

    <%- include('partials/reaction') %>
    
    <%- include('partials/volume') %>

    <div id="endTurn" class="fixed bottom-0 right-0 flex items-center justify-center flex-col p-4">
        <button id="endTurnBtn" class="mt-3 bg-emerald-500 text-white font-bold p-2 border-r-4 border-b-4 border-emerald-700 hover:bg-emerald-600 transition rounded-xl h-16 w-32 text-md lg:h-32 lg:w-64 lg:text-lg disabled:bg-gray-500 disabled:border-gray-700">End Turn</button>
    </div>

    <%- include('partials/loading') %>

    <div id="nextTurn" class="fixed w-full h-screen flex items-center justify-center top-full left-0 transition-all duration-700 ease-in-out pointer-events-none">
        <div id="nextTurnBG" class="w-1/3 h-[100px] bg-black bg-opacity-85 -skew-x-12 border-t-4 border-b-4  border-opacity-85 items-center justify-center flex pointer-events-none"> <!--replace with bg image-->
            <div id="nextRoundMsg" class="text-white pointer-events-none">ENEMY TURN</div>
        </div>
    </div>

    <div id="gameOver" class="fixed w-full h-screen min-h-screen bg-black bg-opacity-85 flex items-center justify-center top-0 left-0 flex-col gap-4">
        <div id="gameOverMsg" class="text-white font-bold text-xl"></div>
        <button id="quitMatchmakingBtn" class="rounded-lg px-6 py-2 bg-cyan-600 text-white font-bold border-b-4 border-r-4 border-cyan-800 transition hover:bg-cyan-700" onclick="window.location.href='/play';">PLAY AGAIN</button>
        <button id="quitMatchmakingBtn" class="rounded-lg px-6 py-2 bg-amber-600 text-white font-bold border-b-4 border-r-4 border-amber-800 transition hover:bg-amber-700" onclick="window.location.href='/home';">GO HOME</button>
    </div>
    <br/><p id="isPrivate" class="hidden"><%= isPrivate %></p>

    <div id="version" class="fixed bottom-0 left-0 m-4 text-gray-500">
        v0.1.0
    </div>

    <script src="/js/main.js"></script>
    <script src="/js/game.js"></script>
    <script src="/js/audiosliderhandler.js"></script>

    <script>
        let seconds = 0;

        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const remainingSeconds = seconds % 60;
            return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}`;
        }

        function startTimer() {
            const timerElement = document.getElementById('matchmakingTimer');
            if (!timerElement) return;
            
            setInterval(() => {
                seconds++;
                timerElement.textContent = formatTime(seconds);
            }, 1000);
        }

        window.onload = function() {
            startTimer();
            const isPrivate = document.getElementById("isPrivate")?.innerText === "true" ? true : false;
            if (!isPrivate) window.socket.emit('create-game', isPrivate, null);

            const copyCodeBtn = document.getElementById('copyCodeBtn');
            if(!copyCodeBtn) return;
            copyCodeBtn.addEventListener('click', function() {
                var gameCode = document.getElementById('gameCode').textContent;
                navigator.clipboard.writeText(gameCode).then(function() {
                    copyCodeBtn.innerHTML = "Code Copied"
                }).catch(function(err) {
                    console.error('Error copying text: ', err);
                });
            });
        };

        function handlePrivateMatch(action) {
            if (action === 'create') {
                const isPrivate = document.getElementById("isPrivate")?.innerText === "true" ? true : false;
                window.socket.emit('create-game', isPrivate, null);

                document.getElementById("privateMatchOptions").classList.add("hidden");
                document.getElementById("gameDetails").classList.remove("hidden");
            } else if (action === 'join') {
                document.getElementById("privateMatchOptions").classList.add("hidden");
                document.getElementById("joinForm").classList.remove("hidden");
            }
        }

        function copyGameCode() {
            const gameCode = document.getElementById("gameCode").textContent;
            navigator.clipboard.writeText(gameCode).then(() => {
                alert("Game Code copied to clipboard!");
            });
        }

        function submitJoinCode() {
            const joinCode = document.getElementById("joinCodeInput").value;

            if (joinCode) {
                const isPrivate = document.getElementById("isPrivate")?.innerText === "true" ? true : false;
                window.socket.emit('create-game', isPrivate, joinCode);
            } else {
                alert("Please enter a game code.");
            }
        }

        function displayReactionMenu(side) {
            console.log(`displaying menu for side ${side}`);
            const reactionMenu = document.getElementById("reactionMenu");
            if (!reactionMenu) return;

            reactionMenu.classList.toggle("hidden");
            reactionMenu.classList.toggle("block");
        }

        emoteTimeout = false;
        function emoteClicked(src) {
            if (emoteTimeout) return;
            emoteTimeout = true;
            window.socket.emit('display-emote', src, window.socket.id);
            setTimeout(() => {
                emoteTimeout = false;
            }, 6500);
        }
    </script>
</body>
</html>