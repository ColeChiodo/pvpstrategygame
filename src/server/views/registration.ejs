<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <meta property="og:title" content="Register | Fortezza Tactics Online" />
    <meta property="og:description" content="Create Your Fortezza Tactics Online Account Today." />
    <meta property="og:image" content="https://fortezzatactics.online/assets/global/favicon.png" />
    <meta property="og:url" content="https://fortezzatactics.online/register" />
    <meta property="og:type" content="website" />

    <title>Register | Fortezza Tactics Online</title>
    <link rel="icon" type="image/png" href="/assets/global/favicon.ico">
    <script src="/js/tailwind.js"></script>
</head>
<body class="bg-primary flex items-center justify-center min-h-screen text-md">
    <div id="main" class="bg-secondary w-screen h-screen flex items-center justify-center overflow-hidden">
        <div id="paralaxed" class="relative w-full h-screen overflow-hidden">
            <img id="1" src="/assets/global/bgs/nature/nature_5/1.png" class="parallax-layer absolute top-0 left-0 h-screen xl:w-screen xl:h-auto object-cover" style="image-rendering: pixelated; z-index: 1;">
            <img id="2" src="/assets/global/bgs/nature/nature_5/2.png" class="parallax-layer absolute top-0 left-0 h-screen xl:w-screen xl:h-auto object-cover" style="image-rendering: pixelated; z-index: 1;">
            <img id="3" src="/assets/global/bgs/nature/nature_5/3.png" class="parallax-layer absolute top-0 left-0 h-screen xl:w-screen xl:h-auto object-cover" style="image-rendering: pixelated; z-index: 1;">
            <img id="4" src="/assets/global/bgs/nature/nature_5/4.png" class="parallax-layer absolute top-0 left-0 h-screen xl:w-screen xl:h-auto object-cover" style="image-rendering: pixelated; z-index: 1;">
            <img id="4" src="/assets/global/bgs/nature/nature_5/5.png" class="parallax-layer absolute top-0 left-0 h-screen xl:w-screen xl:h-auto object-cover" style="image-rendering: pixelated; z-index: 1;">
    
            <div id="contents" class="absolute inset-0 flex flex-col items-center justify-center text-center text-white z-10 overflow-scroll">
                <div class="bg-secondary p-8 w-full max-w-md text-white rounded-xl border-b-4 border-r-4 border-primary">
                    <h1 class="text-3xl font-bold mb-6 text-center">Register</h1>

                    <div id="registration_error" class="hidden bg-amber-100 border border-amber-400 text-amber-700 px-4 py-3 rounded relative text-sm mb-6" role="alert">
                        <strong class="font-bold">Error:</strong>
                        <span id="registration_error_msg" class="block sm:inline"></span>
                    </div>
                    
                    <form id="register-form" class="space-y-4">
                        <div>
                            <input type="text" name="username" id="username" required placeholder="Username" onchange="validateElements()" value=""
                                   class="bg-white text-black block w-full px-4 py-2 border-r-4 border-b-4 border-gray-500 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary">
                        </div>

                        <div id="error-username" class="hidden bg-amber-100 border-l-4 border-amber-500 text-amber-700 p-4 text-left text-sm" role="alert">
                            <p class="font-bold">Username Error</p>
                            <p>Usernames must be between 3-16 characters.</p>
                            <p class="font-bold">The Following is NOT allowed:</p>
                            <p>Spaces or special characters (@, $, %, &, *, etc).</p>
                            <p>Names deemed offensive or inappropriate.</p>
                        </div>

                        <div>
                            <input type="text" name="email" id="email" required placeholder="Email" onchange="validateElements()" value=""
                                   class="bg-white text-black block w-full px-4 py-2 border-r-4 border-b-4 border-gray-500 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary">
                        </div>

                        <div id="error-email" class="hidden bg-amber-100 border-l-4 border-amber-500 text-amber-700 p-4 text-left text-sm" role="alert">
                            <p class="font-bold">Email Error</p>
                            <p>Email is not in the proper form (yourname@example.com)</p>
                        </div>
            
                        <div>
                            <input type="password" name="password" id="password" required placeholder="Password"  onchange="validateElements()" value=""
                                class="bg-white text-black block w-full px-4 py-2 border-r-4 border-b-4 border-gray-500 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary">
                        </div>

                        <div id="error-password" class="hidden bg-amber-100 border-l-4 border-amber-500 text-amber-700 p-4 text-left text-sm" role="alert">
                            <p class="font-bold">Password Error</p>
                            <p>Passwords must be at least 6 characters long.</p>
                            <p> passwords can include letters, numbers, and special characters.</p>
                        </div>

                        <div>
                            <input type="password" name="confirm" id="confirm" required placeholder="Confirm Password"  oninput="validateConfirm()" onchange="validateElements()" value=""
                                class="bg-white text-black block w-full px-4 py-2 border-r-4 border-b-4 border-gray-500 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary">
                        </div>

                        <div id="error-confirm" class="hidden bg-amber-100 border-l-4 border-amber-500 text-amber-700 p-4 text-left text-sm" role="alert">
                            <p class="font-bold">Passwords do not match</p>
                        </div>

                        <div class="flex items-center justify-center">
                            <input type="checkbox" name="terms" id="terms" required onchange="validateElements()"
                                class="w-4 h-4 text-black border-gray-500 rounded focus:ring-2 focus:ring-primary">
                            <label for="terms" class="ms-2 text-sm font-medium text-gray-900 dark:text-gray-300">
                                I agree with the 
                                <a href="/terms" target="_blank" class="text-cyan-600 dark:text-cyan-500 hover:underline">
                                    terms of service
                                </a>.
                            </label>
                        </div>
            
                        <div>
                            <button id="submit" type="submit" class="cursor-not-allowed w-full rounded-lg px-6 py-3 text-white font-bold border-b-4 border-r-4 transition bg-gray-500 border-gray-700 hover:bg-gray-600">
                                Register
                            </button>
                        </div>
                    </form>

                    <div class="mt-4 text-center">
                        <a href="/login" class="text-sm text-cyan-500 hover:text-cyan-700">Already have an account? Login</a>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <script>
        function validateElements() {
            const submit = document.getElementById("submit");
            const terms = document.getElementById("terms").checked;
            
            if (validateUsername() &&
                validateEmail() &&
                validatePassword() &&
                validateConfirm() &&
                terms) {
                    submit.classList.add("hover:bg-emerald-600");
                    submit.classList.add("border-emerald-700");
                    submit.classList.add("bg-emerald-500");
                    submit.classList.remove("cursor-not-allowed");
                    submit.classList.remove("hover:bg-gray-600");
                    submit.classList.remove("border-gray-700");
                    submit.classList.remove("bg-gray-500");
                } else {
                    submit.classList.remove("hover:bg-emerald-600");
                    submit.classList.remove("border-emerald-700");
                    submit.classList.remove("bg-emerald-500");
                    submit.classList.add("cursor-not-allowed");
                    submit.classList.add("hover:bg-gray-600");
                    submit.classList.add("border-gray-700");
                    submit.classList.add("bg-gray-500");
                }
        }

        function validateUsername() {
            let val = document.getElementById('username').value;
            if (!val) return false;

            let result = true;

            if (val.length < 3 || val.length > 16) result = false;
            // profanity filer check
            // if (filter.isProfane(val)) result = false;
            if(containsSpecialCharacters(val)) result = false;

            const error_message = document.getElementById("error-username");
            if (!result) {
                error_message.classList.remove("hidden");
            } else {
                if (!error_message.classList.contains("hidden")) {
                    error_message.classList.add("hidden");
                }
            }

            return result;
        }

        function validateEmail() {
            let val = document.getElementById('email').value;
            if (!val) return false;

            let result = true;

            if (!isValidEmail(val)) result = false;

            const error_message = document.getElementById("error-email");
            if (!result) {
                error_message.classList.remove("hidden");
            } else {
                if (!error_message.classList.contains("hidden")) {
                    error_message.classList.add("hidden");
                }
            }

            return result;
        }

        function validatePassword() {
            let val = document.getElementById('password').value;
            if (!val) return false;

            let result = true;

            if (val.length < 6) result = false;

            const error_message = document.getElementById("error-password");
            if (!result) {
                error_message.classList.remove("hidden");
            } else {
                if (!error_message.classList.contains("hidden")) {
                    error_message.classList.add("hidden");
                }
            }

            return result;
        }

        function validateConfirm() {
            let pass = document.getElementById('password').value;
            let val = document.getElementById('confirm').value;
            if (!val || !pass) return false;

            let result = true;

            if (pass !== val) result = false;

            const error_message = document.getElementById("error-confirm");
            if (!result) {
                error_message.classList.remove("hidden");
            } else {
                if (!error_message.classList.contains("hidden")) {
                    error_message.classList.add("hidden");
                }
            }

            return result;
        }

        function containsSpecialCharacters(str) {
            const regex = /[!@#$%^&*(),.?":{}|<> ]/;
            return regex.test(str);
        }

        function isValidEmail(email) {
            const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            return regex.test(email);
        }
    </script>
    <script>
        const form = document.getElementById('register-form');

        form.addEventListener('submit', async function(event) {
            event.preventDefault();
            
            const formData = new FormData(form);
            const data = new URLSearchParams(formData);

            try {
                const response = await fetch('/auth/register', {
                    method: 'POST',
                    body: data,
                    headers: {
                        'Accept': 'application/json',
                    }
                });

                const responseData = await response.json();

                if (response.ok) {
                    window.location.href = '/login';
                } else {
                    const registration_error = document.getElementById("registration_error");
                    const registration_error_msg = document.getElementById("registration_error_msg");

                    registration_error.classList.remove("hidden");
                    registration_error_msg.innerText = responseData.error;
                }
            } catch (error) {
                console.error('Error during registration:', error);
                alert('An unexpected error occurred. Please try again.');
            }
        });

    </script>
    <script src="/js/imageparallax.js"></script>
</body>
</html>
